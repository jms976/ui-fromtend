# Icon Generation Rules

## 아이콘 생성 규칙

### 새로운 아이콘 생성 시

1. **SVG 제공 시 자동 아이콘 생성**
   - SVG 코드와 아이콘 이름을 제공하면 자동으로 아이콘 파일 생성
   - `packages/ui/src/icons/Icon/` 디렉토리에 저장
   - 자동으로 preview 이미지 생성

2. **아이콘 파일 구조**
   ```tsx
   import { type IconProps } from '../types';
   import CreateIcon from '../CreateIcon';

   const IconNamePath = (
     <>
       <path d="..." />
     </>
   );

   export const IconName = (props: IconProps) =>
     CreateIcon({
       paths: IconNamePath,
       viewBox: '0 0 24 24',
       ...props,
     });
   ```

3. **Stroke 아이콘의 경우**
   ```tsx
   export const IconName = (props: IconProps) =>
     CreateIcon({
       paths: IconNamePath,
       viewBox: '0 0 24 24',
       fill: 'none',
       strokeWidth: 2,
       stroke: 'currentColor',
       ...props,
     });
   ```

4. **인덱스 파일 업데이트**
   - `packages/ui/src/icons/index.ts`에 자동으로 export 추가
   - 알파벳 순서로 정렬

### 아이콘 생성 워크플로우

1. **SVG 제공**: 원본 SVG 코드 제공
2. **이름 지정**: `IconName` 형태로 이름 지정
3. **자동 생성**: 
   - 아이콘 파일 생성 (주석 없이 코드만 작성)
   - Preview 이미지 생성
   - 인덱스 파일 업데이트
4. **스크립트 실행 필수**: 아이콘 파일 생성 후 반드시 `pnpm run generate:icon` 스크립트를 실행하여 주석과 preview가 자동으로 추가되도록 한다.
   - 이 단계가 누락되면 주석/preview가 없는 상태로 남을 수 있으니, 반드시 스크립트 실행을 명시적으로 진행할 것

### 아이콘 타입 구분

- **Stroke 아이콘**: `stroke="currentColor"` 속성 사용
- **Fill 아이콘**: 기본 fill 스타일 사용
- **자동 감지**: SVG 속성에 따라 자동으로 구분

### 파일 위치

- 아이콘 파일: `packages/ui/src/icons/Icon/IconName.tsx`
- 인덱스 파일: `packages/ui/src/icons/index.ts`
- 스크립트: `scripts/generateIconAnnotation.ts`

### 사용 예시

```
사용자: "이 SVG로 아이콘 만들어줘: <svg>...</svg>"
AI: 아이콘 파일을 생성하고 인덱스에 추가, 그리고 반드시 스크립트를 실행해 주석/preview까지 추가
```

### 주의사항

- 아이콘 이름은 PascalCase로 작성
- SVG는 path 요소를 포함해야 함
- viewBox는 24x24 또는 20x20 권장
- stroke 아이콘은 fill="none" 사용 